name: AWS Terraform
description: Plans Terraform against Hackney AWS
inputs:
  aws_access_key_id:
    description: "AWS access key to use"
    required: true
  aws_secret_access_key:
    description: "AWS secret access key to use"
    required: true
  aws_deploy_region:
    description: "AWS region to deploy to"
    default: "eu-west-2"
    required: true
  terraform_state_s3_key_prefix:
    description: "S3 key prefix for Terraform state"
    required: true
  build_path:
    description: "Build path that contains the source"
    required: true
  environment:
    description: "Name of the environemnt e.g. dev, stg, prod, mgmt"
    required: true
  google_project_id:
    description: "Id of google project to which service accounts will be deployed to"
    required: true
  automation_build_url:
    description: "URL of the GitHub Action Run to pass to Terraform"
    required: true
  aws_deploy_account_id:
    description: "AWS account id to deploy to"
    required: true
  aws_api_account_id:
    description: "AWS api account id to deploy to"
    required: true
  aws_mosaic_prod_account_id:
    description: "AWS Mosaic prod account id to connect to"
    required: true
  aws_data_platform_account_id:
    description: "AWS Data Platform account ID"
    required: true
  aws_api_vpc_id:
    description: "AWS API Account VPC ID"
    required: true
  aws_housing_vpc_id:
    description: "AWS Housing Account VPC ID"
    required: true
  aws_mosaic_vpc_id:
    description: "AWS Mosaic Account VPC ID"
    required: true
  aws_dp_vpc_id:
    description: "Data Platform VPC ID"
    required: true
  aws_hackit_account_id:
    description: "AWS HackIT account id to deploy to"
    required: true
  aws_deploy_iam_role_name:
    description: "AWS IAM role name to assume for deployment"
    required: true
  TF_VAR_deployment_user_arn:
    description: "AWS arn for deployment user account"
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup build environment
      id: setup
      run: |
        ${{ github.action_path }}/../.helpers/box.sh "Setting up build environment"
      shell: bash
      working-directory: "${{ inputs.build_path }}"

    - name: Terraform Init
      id: init
      run: |
        ${{ github.action_path }}/../.helpers/box.sh "Running Terraform init"
        echo -e "Configuring AWS credentials."
        aws configure set default.region eu-west-2 > /dev/null 2>&1
        aws configure set aws_access_key_id ${{ inputs.aws_access_key_id }} > /dev/null 2>&1
        aws configure set aws_secret_access_key ${{ inputs.aws_secret_access_key }} > /dev/null 2>&1
        terraform init -backend-config="region=eu-west-2" -backend-config="dynamodb_table=lbhackney-terraform-state-lock" -backend-config="encrypt=true" -backend-config="workspace_key_prefix=${{ inputs.terraform_state_s3_key_prefix }}" -backend-config="bucket=lbhackney-terraform-state" -backend-config="key=${{ inputs.terraform_state_s3_key_prefix }}/${{ inputs.environment }}-terraform.tfstate"
        echo -e "Terraform S3 bucket: lbhackney-terraform-state"
        echo -e "Terraform state file: ${{ inputs.terraform_state_s3_key_prefix }}/${{ inputs.environment }}-terraform.state"
        echo -e "\n"
      shell: bash
      working-directory: "${{ inputs.build_path }}"

    - name: Terraform Plan
      id: plan
      run: |
          ${{ github.action_path }}/../.helpers/box.sh "Running Terraform plan"
          terraform plan -lock=false -var-file='../config/terraform/${{ inputs.environment }}.tfvars' -var 'aws_deploy_region=${{ inputs.aws_deploy_region }}' -var 'aws_deploy_account_id=${{ inputs.aws_deploy_account_id }}' -var 'aws_api_account_id=${{ inputs.aws_api_account_id }}' -var 'aws_mosaic_prod_account_id=${{ inputs.aws_mosaic_prod_account_id }}' -var 'aws_data_platform_account_id=${{ inputs.aws_data_platform_account_id }}' -var 'aws_hackit_account_id=${{ inputs.aws_hackit_account_id }}' -var 'aws_deploy_iam_role_name=${{ inputs.aws_deploy_iam_role_name }}' -var 'environment=${{ inputs.environment }}' -var 'google_project_id=${{ inputs.google_project_id }}' -var 'automation_build_url=${{ inputs.automation_build_url }}' -var 'aws_api_vpc_id=${{ inputs.aws_api_vpc_id }}' -var 'aws_housing_vpc_id=${{ inputs.aws_housing_vpc_id }}' -var 'aws_mosaic_vpc_id=${{ inputs.aws_mosaic_vpc_id }}' -var 'aws_dp_vpc_id=${{ inputs.aws_dp_vpc_id }}' -input=false -out=plan.out
          echo -e "\n"
      shell: bash
      working-directory: "${{ inputs.build_path }}"
