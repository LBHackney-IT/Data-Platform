name: Data-Platform (Staging)
concurrency: staging-deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      terraform_import:
        description: "Terraform import statements"
        required: false
      terraform_remove:
        description: "Terraform state rm statements"
        required: false

jobs:
  pre-deploy-checks:
    uses:  LBHackney-IT/Data-Platform/.github/workflows/test-and-validate.yml@workflows
    with:
      environment: "stg"
      automation_build_url: "https://github.com/LBHackney-IT/data-platform/actions/workflows/data_platform_stg.yml"
    secrets:
      google_project_id: ${{ secrets.GOOGLE_PROJECT_ID_STG }}
      aws_deploy_account: ${{ secrets.AWS_ACCOUNT_DATA_PLATFORM_STG }}
      INFRASTRUCTURE_PRIVATE_KEY: ${{ secrets.INFRASTRUCTURE_PRIVATE_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_API_ACCOUNT_PROD: ${{ secrets.AWS_API_ACCOUNT_PROD }}
      AWS_HACKIT_ACCOUNT_ID: ${{ secrets.AWS_HACKIT_ACCOUNT_ID }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }} 
  build-and-deploy:
    needs: ["pre-deploy-checks"]
    uses: LBHackney-IT/Data-Platform/.github/workflows/deploy_terraform.yml@main
    with:
      terraform_import: ${{ github.event.inputs.terraform_import }}
      terraform_remove: ${{ github.event.inputs.terraform_remove }}
      environment: "stg"
      automation_build_url: "https://github.com/LBHackney-IT/data-platform/actions/workflows/data_platform_stg.yml"
    secrets:
      google_project_id: ${{ secrets.GOOGLE_PROJECT_ID_STG }}
      aws_deploy_account: ${{ secrets.AWS_ACCOUNT_DATA_PLATFORM_STG }}
      INFRASTRUCTURE_PRIVATE_KEY: ${{ secrets.INFRASTRUCTURE_PRIVATE_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_API_ACCOUNT_PROD: ${{ secrets.AWS_API_ACCOUNT_PROD }}
      AWS_HACKIT_ACCOUNT_ID: ${{ secrets.AWS_HACKIT_ACCOUNT_ID }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }} 
      AWS_API_VPC_ID: ${{ secrets.AWS_API_VPC_ID }} 

